openapi: 3.0.1
info:
  title: character-creator
  description: Приложение для управления игровыми персонажами и гильдиями; выполнения
    игровых логик
  contact:
    name: Никита Ковалев
    email: qweezique@gmail.com
  version: 0.0.1-SNAPSHOT
servers:
- url: http://localhost:8080/character-creator
  description: Generated server url
tags:
- name: "[LADDER CONTROLLER]"
  description: Контроллер получения игровой статистики
- name: "[GUILD CONTROLLER]"
  description: Управление гильдиями
- name: "[GAME CONTROLLER]"
  description: Выполнение игровых логик
- name: "[CHARACTER CRUD CONTROLLER]"
  description: Управление игровым персонажем
paths:
  /game/guild/level-up/:
    post:
      tags:
      - "[GAME CONTROLLER]"
      summary: Повышение уровня персонажей в гильдии
      description: "Те персонажи, которые состоят в выбранной гильдии получают пов\
        ышение уровня, удвоение атрибутов"
      operationId: levelUpToAllCharactersInGuild
      parameters:
      - name: type
        in: query
        required: true
        schema:
          type: string
          enum:
          - WIZZARD
          - KNIGHT
          - THIEF
      responses:
        "200":
          description: "Уровни персонажей увеличены, атрибуты удвоены, получено со\
            общение с подтверждением"
          content:
            '*/*':
              schema:
                type: string
  /game/character/level-up/{id}:
    post:
      tags:
      - "[GAME CONTROLLER]"
      summary: "Повышение уровня персонажа, поиск по ID"
      description: "Инкрементриуется уровень персонажа, его атрибуты удваиются"
      operationId: levelUpToCharacter
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: "Уровень увелен, атрибуты удвоены; получено сообщение с под\
            тверждением"
          content:
            '*/*':
              schema:
                type: string
  /game/character/add-to-guild/{id}:
    post:
      tags:
      - "[GAME CONTROLLER]"
      summary: "Добавление персонажа в его гильдию, поиск по ID персонажа"
      description: "Персонаж добавляется в гильдию в соответствии с его типом [WIZZARD,\
        \ KNIGHT, THIEF]"
      operationId: addToGuild
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: "Персонаж добавлен в гильдию, изменен статус hasGuild = true,\
            \ получено подверждающее сообщение"
          content:
            '*/*':
              schema:
                type: string
  /character:
    get:
      tags:
      - "[CHARACTER CRUD CONTROLLER]"
      summary: Получение всех игровых персонажей
      operationId: getAll
      responses:
        "200":
          description: Представлены все игровые персонажи из базы данных
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CharacterEntity'
    post:
      tags:
      - "[CHARACTER CRUD CONTROLLER]"
      summary: Создание игрового персонажа
      description: "Пользователь передает в тело запроса только имя и тип персонаж\
        а; на основании переданного типа, строятся основные стартовые атрибуты пер\
        сонажа"
      operationId: createCharacter
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewCharacterRequestDto'
        required: true
      responses:
        "200":
          description: "Персонаж создан, присвоен ID и дата создания"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CharacterResponseDto'
  /guild/change/message/{id}:
    patch:
      tags:
      - "[GUILD CONTROLLER]"
      summary: "Изменение сообщения дня в гильдии, поиск по ID"
      description: Изменяемое поле; сообщение для всех участников гильдии; новое сообщение
        передавать в тело запроса без ковычек
      operationId: changeMessageOfTheDayById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: Сообщение изменено и сохранено в базе данных; в ответ получено
            сообщение с подтверждением
          content:
            '*/*':
              schema:
                type: string
  /character/change/name/{id}:
    patch:
      tags:
      - "[CHARACTER CRUD CONTROLLER]"
      summary: Изменение имени персонажа
      description: "Поиск игрового персонажа в базе по ID, передача нового имени в\
        \ теле запроса без ковычек"
      operationId: changeCharacterName
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: "Имя персонажа изменено, передано подтверждающее сообщение"
          content:
            '*/*':
              schema:
                type: string
  /ladder/top-level-character:
    get:
      tags:
      - "[LADDER CONTROLLER]"
      summary: Получение лучшего игрока по уровню
      description: Наивысший уровень среди всех игроков
      operationId: getTopLevelCharacter
      responses:
        "200":
          description: Отравлены данные игрока с наивысшим уровнем
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CharacterEntity'
  /guild:
    get:
      tags:
      - "[GUILD CONTROLLER]"
      summary: Получение всех гильдий
      operationId: getALl
      responses:
        "200":
          description: "Запрос выполнен, данные отправлены"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GuildEntity'
  /guild/{id}:
    get:
      tags:
      - "[GUILD CONTROLLER]"
      summary: Получение гильдии по ID
      operationId: getById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: "Гильдия найдена, данные отправлены"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GuildEntity'
  /guild/init:
    get:
      tags:
      - "[GUILD CONTROLLER]"
      summary: Инициализация основных игровых гильдий
      description: "Логика приложения не предусматривает создание гильдий. Гильдии\
        \ должны уже быть созданы; аварийный end-point для создания основных гильд\
        ий [WIZZARD, KNIGHT, THIEF]"
      operationId: init
      responses:
        "200":
          description: "Гильдии созданы, сохранены в базе данных; в ответ получен\
            \ список гильдий"
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GuildEntity'
  /guild/by:
    get:
      tags:
      - "[GUILD CONTROLLER]"
      summary: Получение гильдии по имени
      description: Имя гильдии == тип персонажа (ENUM)
      operationId: getByName
      parameters:
      - name: type
        in: query
        required: true
        schema:
          type: string
          enum:
          - WIZZARD
          - KNIGHT
          - THIEF
      responses:
        "200":
          description: "Гильдия найдена, данные отправлены"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GuildEntity'
  /character/{id}:
    get:
      tags:
      - "[CHARACTER CRUD CONTROLLER]"
      summary: Поиск игрового персонажа по ID
      operationId: getById_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: "Персонаж под запрашиваемым ID найден, данные отправлены"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CharacterEntity'
  /character/by:
    get:
      tags:
      - "[CHARACTER CRUD CONTROLLER]"
      summary: Поиск игрового персонажа по имени
      operationId: getByName_1
      parameters:
      - name: name
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: "Персонаж под запрашиваемым именем найден, данные отправлен\
            ы"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CharacterEntity'
  /character/del/{id}:
    delete:
      tags:
      - "[CHARACTER CRUD CONTROLLER]"
      summary: Удаление персонажа по ID
      operationId: deleteCharacter
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Персонаж удален из базы; передано подтверждающее сообщение
          content:
            '*/*':
              schema:
                type: string
  /character/del/all:
    delete:
      tags:
      - "[CHARACTER CRUD CONTROLLER]"
      summary: Удаление всех персонажей из базы данных
      operationId: deleteAllCharacters
      responses:
        "200":
          description: "Персонажи удалены, передано подтверждающее сообщение"
          content:
            '*/*':
              schema:
                type: string
components:
  schemas:
    NewCharacterRequestDto:
      type: object
      properties:
        name:
          type: string
          description: Имя персонажа (можно будет изменить в дальнейшем)
          example: Nikita
        type:
          type: string
          description: "Тип игрвого персонажа, определяющий его начальные характер\
            истики и гильдию, в которую можно будет вступить"
          enum:
          - WIZZARD
          - KNIGHT
          - THIEF
      description: 'DTO необходимых минимальных данных для создания персонажа '
    CharacterAttributes:
      type: object
      properties:
        strength:
          type: integer
          description: Сила
          format: int32
        dexterity:
          type: integer
          description: Ловкость
          format: int32
        vitality:
          type: integer
          description: Живучесть
          format: int32
        energy:
          type: integer
          description: Энергия
          format: int32
      description: Основные характеристика персонажа
    CharacterResponseDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
        level:
          type: integer
          format: int32
        name:
          type: string
        hasGuild:
          type: boolean
        attributes:
          $ref: '#/components/schemas/CharacterAttributes'
        character_type:
          type: string
          enum:
          - WIZZARD
          - KNIGHT
          - THIEF
      description: DTO ответа при создании персонажа
    CharacterEntity:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        level:
          type: integer
          format: int32
        registrationDate:
          type: string
          format: date
        guild:
          $ref: '#/components/schemas/GuildEntity'
        type:
          type: string
          enum:
          - WIZZARD
          - KNIGHT
          - THIEF
        hasGuild:
          type: boolean
          description: Вступил/Не вступил в гильдию
        attributes:
          $ref: '#/components/schemas/CharacterAttributes'
      description: Сущность игрового персонажа
    GuildEntity:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          description: "Имя гильдии определяется по персонажам, типы же которых в\
            \ него могут вступить"
          enum:
          - WIZZARD
          - KNIGHT
          - THIEF
        description:
          type: string
          description: "Информация о гильдии, с описанием сильных и слабых сторон\
            \ персонажей в ней"
        messageOfTheDay:
          type: string
          description: Сообщение дня - информация для всех членов гильдии
        characters:
          type: array
          items:
            $ref: '#/components/schemas/CharacterEntity'
      description: Сущность гильдии
